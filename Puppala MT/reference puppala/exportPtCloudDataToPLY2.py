# export a point cloud to .ply file
# by Djordje Spasic, issworld2000@yahoo.com
# 16 Sep 2015.
import rhinoscriptsyntax as rs
import System
import Rhino

def exportPtCloudDataToPLY(ptCloudId):
    ptCloud = rs.coercegeometry(ptCloudId)
    filePath = rs.SaveFileName("Save ply file","*.ply||", None, "exportPointCloudData", "ply")
    if filePath == None: return
    file = open(filePath, "w")
    pts = ptCloud.GetPoints()
    plyheader = """ply
format ascii 1.0
comment Author: Rhino with Python Script by Djordje Spasic
obj_info Generated by Rhino
element vertex %s
property float x
property float y
property float z
property float nx
property float ny
property float nz
property uchar red
property uchar green
property uchar blue
end_header\n""" % len(pts)

    file.write(plyheader)
    
    #default values
    defaultColor = System.Drawing.Color.FromArgb(0,0,0)   # black
    defaultNormal = Rhino.Geometry.Vector3d(0,0,1)   # z vector
    
    if ptCloud.ContainsColors:
        colors = ptCloud.GetColors()
    else:
        colors = [defaultColor for i in range(len(pts))]
    if ptCloud.ContainsNormals:
        normals = ptCloud.GetNormals()
    else:
        normals = [defaultNormal for i in range(len(pts))]
    
    for i in range(len(pts)):
        line = "%.3f %.3f %.3f %.3f %.3f %.3f %s %s %s\n" %(pts[i].X, pts[i].Y, pts[i].Z, normals[i].X, normals[i].Y, normals[i].Z, colors[i].R, colors[i].G, colors[i].B)
        file.write(line)
    file.close()
    print "Point cloud data successfully exported to .ply file"

_ptCloudId = rs.GetObject("Pick up a point cloud", 2, True)
if _ptCloudId:
    exportPtCloudDataToPLY(_ptCloudId)